"""add_stops_and_timetables

Revision ID: 227d4cbd2e85
Revises: 27767909c816
Create Date: 2025-01-03 00:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '227d4cbd2e85'
down_revision: Union[str, Sequence[str], None] = '27767909c816'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create stops table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS stops (
            id SERIAL PRIMARY KEY,
            stop_id VARCHAR UNIQUE NOT NULL,
            name VARCHAR,
            location GEOMETRY(POINT)
        )
    """)
    op.execute('CREATE INDEX IF NOT EXISTS idx_stops_location ON stops USING gist (location)')
    
    # Create timetables table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS timetables (
            id SERIAL PRIMARY KEY,
            route_id VARCHAR REFERENCES routes(route_id),
            departure_time TIMESTAMP NOT NULL,
            vehicle_id VARCHAR REFERENCES vehicles(vehicle_id)
        )
    """)
    
    # Create route_stops table if it doesn't exist
    op.execute("""
        CREATE TABLE IF NOT EXISTS route_stops (
            id SERIAL PRIMARY KEY,
            route_id VARCHAR REFERENCES routes(route_id),
            stop_id VARCHAR REFERENCES stops(stop_id),
            sequence INTEGER,
            arrival_offset INTEGER
        )
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_stops')
    op.drop_table('timetables')
    op.drop_index('idx_stops_location', table_name='stops', postgresql_using='gist')
    op.drop_table('stops')
    # ### end Alembic commands ###
