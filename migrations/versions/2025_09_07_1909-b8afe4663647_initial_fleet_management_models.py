"""
Alembic migration script template
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b8afe4663647'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the new enum type first
    op.execute("CREATE TYPE vehiclestatus AS ENUM ('available', 'in_service', 'maintenance', 'retired')")
    
    op.alter_column('route_shapes', 'variant_code',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('route_shapes', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    
    # Convert enum columns using explicit casting
    op.execute("ALTER TABLE vehicle_status_events ALTER COLUMN status TYPE vehiclestatus USING status::text::vehiclestatus")
    op.execute("ALTER TABLE vehicles ALTER COLUMN status TYPE vehiclestatus USING status::text::vehiclestatus")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Convert enum columns back using explicit casting
    op.execute("ALTER TABLE vehicles ALTER COLUMN status TYPE vehiclestatusenum USING status::text::vehiclestatusenum")
    op.execute("ALTER TABLE vehicle_status_events ALTER COLUMN status TYPE vehiclestatusenum USING status::text::vehiclestatusenum")
    
    op.alter_column('route_shapes', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('route_shapes', 'variant_code',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    
    # Drop the new enum type
    op.execute("DROP TYPE IF EXISTS vehiclestatus")
    # ### end Alembic commands ###
