"""add_vehicle_performance_fields

Revision ID: 78bbe0a967b2
Revises: c9ea82bdfdcb
Create Date: 2025-09-13 13:23:05.599302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78bbe0a967b2'
down_revision: Union[str, Sequence[str], None] = 'c9ea82bdfdcb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add performance columns with default values for existing records
    op.add_column('vehicles', sa.Column('max_speed_kmh', sa.Float(), nullable=False, server_default='25.0'))
    op.add_column('vehicles', sa.Column('acceleration_mps2', sa.Float(), nullable=False, server_default='1.2'))
    op.add_column('vehicles', sa.Column('braking_mps2', sa.Float(), nullable=False, server_default='1.8'))
    op.add_column('vehicles', sa.Column('eco_mode', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('vehicles', sa.Column('performance_profile', sa.Text(), nullable=True))
    op.drop_constraint(op.f('uq_vehicles_assigned_gps_device_id'), 'vehicles', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_vehicles_assigned_gps_device_id'), 'vehicles', ['assigned_gps_device_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('vehicles', 'performance_profile')
    op.drop_column('vehicles', 'eco_mode')
    op.drop_column('vehicles', 'braking_mps2')
    op.drop_column('vehicles', 'acceleration_mps2')
    op.drop_column('vehicles', 'max_speed_kmh')
    # ### end Alembic commands ###
